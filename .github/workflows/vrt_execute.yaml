name: Visual Regression Test Execute
on:
  push:
    branches:
      - ci/**
  pull_request:
    branches-ignore:
      - ci/**
    types:
      - opened
      - synchronize
      - reopened

permissions:
  pull-requests: write
  pages: write
  id-token: write

env:
  NODE_VERSION: ${{ vars.CI_NODE_VERSION }} # e.g. 16.x
  GH_PAGES_VRT_REPORT_PATH: ${{ vars.CI_GH_PAGES_VRT_REPORT_PATH }} # e.g. vrt-report
  VRT_REPORT_PATH: .reg

jobs:
  prepare:
    name: Prepare main branch screenshots
    runs-on: ubuntu-latest
    environment: Test
    steps:
      - name: setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: ${{ env.NODE_VERSION }}

      - name: checkout latest main branch
        uses: actions/checkout@v3
        with:
          ref: main
          fetch-depth: 0

      - name: check commit hash
        id: commithash
        run: echo "COMMIT_HASH=$(git rev-parse HEAD)" >> $GITHUB_ENV

      - name: restore npm cache
        uses: actions/cache@v3
        with:
          path: ~/.npm
          key: reg-npm-${{ hashFiles('**/package-lock.json') }}-v1

      - name: restore reg-suit screenshots
        uses: actions/cache@v3
        with:
          path: ${{ env.VRT_REPORT_PATH }}
          key: reg-${{ env.COMMIT_HASH }}-v7

      - name: Check file existence
        id: check_files
        uses: andstor/file-existence-action@v2
        with:
          files: ${{ env.VRT_REPORT_PATH }}

      - name: npm install main branch
        if: steps.check_files.outputs.files_exists == 'false'
        run: npm ci

      - name: capture main branch
        if: steps.check_files.outputs.files_exists == 'false'
        run: npm run vrt:capture

      - name: run vrt
        if: steps.check_files.outputs.files_exists == 'false'
        run: npm run vrt:run

      - name: move actual -> expected
        if: steps.check_files.outputs.files_exists == 'false'
        run: |
          rm -rf ${VRT_REPORT_PATH}/expected/
          mv -f ${VRT_REPORT_PATH}/actual/ ${VRT_REPORT_PATH}/expected/
          mkdir ${VRT_REPORT_PATH}/actual/
          ls -l ${VRT_REPORT_PATH}/

      - name: upload ${{ env.VRT_REPORT_PATH }}
        uses: actions/upload-artifact@v3
        with:
          name: visual regression test expected
          path: ${{ env.VRT_REPORT_PATH }}

  run:
    name: Run reg-suit
    needs: prepare
    runs-on: ubuntu-latest
    environment: Test
    steps:
      - name: setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: ${{ env.NODE_VERSION }}

      - name: checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: workaround for detached HEAD
        if: ${{ github.event_name == 'pull_request' }}
        run: |
          git checkout ${GITHUB_HEAD_REF#refs/heads/} || git checkout -b ${GITHUB_HEAD_REF#refs/heads/} && git pull

      - name: restore npm cache
        uses: actions/cache@v3
        with:
          path: ~/.npm
          key: npm-${{ hashFiles('**/package-lock.json') }}-v1

      - name: npm install
        run: npm ci

      - name: load reg-suit expecteds
        uses: actions/download-artifact@v3
        with:
          name: visual regression test expected
          path: ${{ env.VRT_REPORT_PATH }}

      - name: capture current branch
        run: npm run vrt:capture

      - name: run vrt
        run: npm run vrt:run

      - name: upload vrt report
        uses: actions/upload-artifact@v3
        with:
          name: VRT Report ( by upload-artifact )
          path: ${{ env.VRT_REPORT_PATH }}

      - uses: actions/upload-pages-artifact@v2
        name: Upload Pages Artifact
        with:
          name: VRT Report
          path: ${{ env.VRT_REPORT_PATH }}

      - uses: actions/deploy-pages@v2
        id: deployment
        with:
          artifact_name: VRT Report

      - name: Get GitHub Pages Custom Domain
        run: |
          echo "CNAME=$(cat CNAME)" >> $GITHUB_ENV

      - name: PR comment with link to report
        uses: thollander/actions-comment-pull-request@v2
        if: github.event_name != 'push'
        with:
          message: |
            https://${{ env.CNAME }}/${{ env.GH_PAGES_VRT_REPORT_PATH }}
          mode: delete
