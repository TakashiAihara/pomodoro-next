name: Execute Tests (VRT/Unit)
on:
  push:
    branches:
      - ci/**
  pull_request:
    branches-ignore:
      - ci/**
    types:
      - opened
      - synchronize
      - reopened

permissions:
  pull-requests: write
  pages: write
  id-token: write

env:
  NODE_VERSION: 18.x
  PNPM_VERSION: 8
  TEST_REPORTS_PATH: test-results
  VRT_REPORT_PATH: vrt
  VRT_REPORT_ARTIFACT: VRT Results
  VRT_REPORT_ARTIFACT_MAIN: VRT Resources From Main
  UNIT_TEST_PATH: unit
  UNIT_TEST_ARTIFACT: Unit Test Results
  GITHUB_PAGES_ARTIFACT: Github Pages
  STORYBOOK_DOCS_BRANCH: docs/storybook
  STORYBOOK_SUBDIR: storybook
  STORYCAP_DOCS_BRANCH: docs/storycap

jobs:
  vrt-execute:
    name: Execute VRT
    runs-on: ubuntu-latest
    steps:
      - name: checkout current branch
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - if: ${{ github.event_name == 'pull_request' }}
        name: workaround for detached HEAD
        run: |
          git checkout ${GITHUB_HEAD_REF#refs/heads/} || git checkout -b ${GITHUB_HEAD_REF#refs/heads/} && git pull

      - name: setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: ${{ env.NODE_VERSION }}

      - uses: pnpm/action-setup@v2
        name: Install pnpm
        with:
          version: ${{ env.PNPM_VERSION }}
          run_install: false

      - name: Get pnpm store directory
        shell: bash
        run: |
          echo "STORE_PATH=$(pnpm store path --silent)" >> $GITHUB_ENV

      - uses: actions/cache@v3
        name: Setup pnpm cache
        with:
          path: ${{ env.STORE_PATH }}
          key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-store-

      - name: Install dependencies
        run: pnpm i --frozen-lockfile

      - name: checkout latest storycap from ${{ env.STORYCAP_DOCS_BRANCH }}
        id: checkout_latest_storycap
        uses: actions/checkout@v3
        with:
          ref: ${{ env.STORYCAP_DOCS_BRANCH }}
          path: ${{ env.TEST_REPORTS_PATH }}/${{ env.VRT_REPORT_PATH }}/expected
        continue-on-error: true

      - if: steps.checkout_latest_storycap.outcome != 'success'
        name: Failed to checkout latest storycap from ${{ env.STORYCAP_DOCS_BRANCH }}
        uses: thollander/actions-comment-pull-request@v2
        with:
          message: |
            Failed to checkout latest storycap from ${{ env.STORYCAP_DOCS_BRANCH }}.
          mode: delete
          reactions: confused

      - if: steps.checkout_latest_storycap.outcome != 'success'
        run: exit 1

      - name: capture current branch
        run: pnpm vrt:capture

      - name: run vrt
        run: pnpm vrt:run

      - if: always()
        uses: actions/upload-artifact@v3
        name: upload pages artifact
        with:
          name: ${{ env.VRT_REPORT_ARTIFACT }}
          path: ${{ env.TEST_REPORTS_PATH }}/${{ env.VRT_REPORT_PATH }}

      - if: always()
        name: cache VRT report
        uses: actions/cache@v3
        id: cache-vrt-report
        with:
          path: ${{ env.TEST_REPORTS_PATH }}/${{ env.VRT_REPORT_PATH }}
          key: vrt-${{ runner.os }}-${{ github.run_id }}

  unit-test-execute:
    name: Execute Unit Test
    runs-on: ubuntu-latest
    steps:
      - name: checkout current branch
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - if: ${{ github.event_name == 'pull_request' }}
        name: workaround for detached HEAD
        run: |
          git checkout ${GITHUB_HEAD_REF#refs/heads/} || git checkout -b ${GITHUB_HEAD_REF#refs/heads/} && git pull

      - name: setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: ${{ env.NODE_VERSION }}

      - uses: pnpm/action-setup@v2
        name: Install pnpm
        with:
          version: ${{ env.PNPM_VERSION }}
          run_install: false

      - name: Get pnpm store directory
        shell: bash
        run: |
          echo "STORE_PATH=$(pnpm store path --silent)" >> $GITHUB_ENV

      - uses: actions/cache@v3
        name: Setup pnpm cache
        with:
          path: ${{ env.STORE_PATH }}
          key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-store-

      - name: Install dependencies
        run: pnpm i --frozen-lockfile

      - name: execute unit test with coverage
        run: pnpm ut:coverage

      - if: always()
        name: report coverage into PR
        uses: davelosert/vitest-coverage-report-action@v2
        with:
          file-coverage-mode: all
          json-final-path: ${{ env.TEST_REPORTS_PATH }}/${{ env.UNIT_TEST_PATH }}/coverage-final.json
          json-summary-path: ${{ env.TEST_REPORTS_PATH }}/${{ env.UNIT_TEST_PATH }}/coverage-summary.json

      - if: always()
        uses: actions/upload-artifact@v3
        name: upload pages artifact
        with:
          name: ${{ env.UNIT_TEST_ARTIFACT }}
          path: ${{ env.TEST_REPORTS_PATH }}/${{ env.UNIT_TEST_PATH }}

      - if: always()
        name: cache unit test report
        uses: actions/cache@v3
        id: cache-unit-test-report
        with:
          path: ${{ env.TEST_REPORTS_PATH }}/${{ env.UNIT_TEST_PATH }}
          key: vrt-${{ runner.os }}-${{ github.run_id }}

  deploy-github-pages:
    name: Summarize Deliverables and Deploy Github Pages
    runs-on: ubuntu-latest
    needs:
      - vrt-execute
      - unit-test-execute
    if: >
      always() &&
      (
        needs.vrt-execute.result == 'success' ||
        needs.unit-test-execute.result == 'success'
      )

    steps:
      - name: load VRT report cache
        uses: actions/cache@v3
        id: load-cache-vrt-report
        with:
          path: ${{ env.TEST_REPORTS_PATH }}/${{ env.VRT_REPORT_PATH }}
          key: vrt-${{ runner.os }}-${{ github.run_id }}

      - name: load unit test report cache
        uses: actions/cache@v3
        id: load-cache-unit-test-report
        with:
          path: ${{ env.TEST_REPORTS_PATH }}/${{ env.UNIT_TEST_PATH }}
          key: vrt-${{ runner.os }}-${{ github.run_id }}

      - name: checkout ${{ env.STORYBOOK_DOCS_BRANCH }} for deploy with ${{ env.TEST_REPORTS_PATH }}
        uses: actions/checkout@v3
        with:
          ref: ${{ env.STORYBOOK_DOCS_BRANCH }}
          path: ${{ env.STORYBOOK_SUBDIR }}

      - uses: actions/upload-pages-artifact@v2
        name: upload pages artifact
        with:
          name: ${{ env.GITHUB_PAGES_ARTIFACT }}
          path: .

      - uses: actions/deploy-pages@v2
        id: deployment
        with:
          artifact_name: ${{ env.GITHUB_PAGES_ARTIFACT }}

      - name: checkout CNAME
        uses: actions/checkout@v3
        with:
          ref: main
          clean: true

      - name: get gitHub pages custom domain
        run: |
          echo "CNAME=$(cat CNAME)" >> $GITHUB_ENV

      - if: >
          github.event_name != 'push' &&
          steps.load-cache-vrt-report.outputs.cache-hit == 'true'
        name: PR comment with VRT result link
        uses: thollander/actions-comment-pull-request@v2
        with:
          message: |
            VRT Report is available at
            https://${{ env.CNAME }}/${{ env.TEST_REPORTS_PATH }}/${{ env.VRT_REPORT_PATH }}
            Please check it if failed!! 😁
          mode: delete

      - if: >
          github.event_name != 'push' &&
          steps.load-cache-unit-test-report.outputs.cache-hit == 'true'
        name: PR comment with unit test result link
        uses: thollander/actions-comment-pull-request@v2
        with:
          message: |
            Unit Test Report is available at
            https://${{ env.CNAME }}/${{ env.TEST_REPORTS_PATH }}/${{ env.UNIT_TEST_PATH }}
          mode: delete
